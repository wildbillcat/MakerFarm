@{
    MakerFarm.Models.Job AssignedJob = (MakerFarm.Models.Job)ViewData["AssignedJob"];
    /*
     * Either this Job hasn't yet started and we are waiting for the Printer to pick it up
     * Or the job is presently printing
     * Or or the job has completed!
     * Status should reflect as such.
     */
}
@{
    bool Compressed = (bool)ViewData["Compressed"];
}
@if (Compressed) {
if (AssignedJob != null && AssignedJob.complete)
{
    @Html.ActionLink("Update Status", "Create", "PrintEvents", new { id = AssignedJob.AffiliatedPrint.PrintId, MId = (long)ViewData["MId"] }, null);
}
}
else
{
if (AssignedJob != null)
{
    <text>Job Status : </text> @AssignedJob.Status
}
if (AssignedJob != null && AssignedJob.complete)
{
    <text>Job Complete</text>
    <br />
    <input type="button" value="Update Print Status" onclick="location.href='@Url.Action("Create", "PrintEvents", new { id = AssignedJob.AffiliatedPrint.PrintId, MId = (long)ViewData["MId"] })'" />
}
else
{
    using (Html.BeginForm("CancelJob", "Machines"))
    {
    @Html.AntiForgeryToken()
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            @Html.Hidden("MId", (long)ViewData["MId"])
            <input type="submit" value="Cancel Job?" class="btn btn-default" />
        </div>
    </div>
    }
}    
}

