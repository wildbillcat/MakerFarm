@model MakerFarm.Models.PrinterType

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "PrinterTypes", FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="form-horizontal">
        <h4>PrinterType</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.TypeName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TypeName)
                @Html.ValidationMessageFor(model => model.TypeName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SupportedNumberMaterials, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SupportedNumberMaterials)
                @Html.ValidationMessageFor(model => model.SupportedNumberMaterials)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaterialUseUnit, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaterialUseUnit)
                @Html.ValidationMessageFor(model => model.MaterialUseUnit)
            </div>
        </div>

        <div class="editor-label">
            @Html.Label("Printer Icon:")
        </div>
        <div class="editor-field">
            @Html.TextBox("IconFile", null, new { @id = "IconFile", @name = "IconFile", @type = "file", @required = "required" })
            @Html.ValidationMessage("IconFile")
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaxNumberUserAttempts, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaxNumberUserAttempts)
                @Html.ValidationMessageFor(model => model.MaxNumberUserAttempts)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SupportedFileTypes, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SupportedFileTypes)
                @Html.ValidationMessageFor(model => model.SupportedFileTypes)
            </div>
        </div>

        <div class="form-group">
        @Html.LabelFor(model => model.CommentField, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CommentField)
            @Html.ValidationMessageFor(model => model.CommentField)
        </div>
    </div>
    
    <div class="form-group">
            @Html.LabelFor(model => model.AboutPrinter, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.AboutPrinter)
                @Html.ValidationMessageFor(model => model.AboutPrinter)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HyperLink, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HyperLink)
                @Html.ValidationMessageFor(model => model.HyperLink)
            </div>
        </div>
    
        <div class="form-group">
            @Html.LabelFor(model => model.MaximumNumberOfCopies, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaximumNumberOfCopies)
                @Html.ValidationMessageFor(model => model.MaximumNumberOfCopies)
            </div>
        </div>
    
        <div class="form-group">
            @Html.LabelFor(model => model.BuildLength, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BuildLength)
                @Html.ValidationMessageFor(model => model.BuildLength)
            </div>
        </div>
    
        <div class="form-group">
            @Html.LabelFor(model => model.BuildWidth, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BuildWidth)
                @Html.ValidationMessageFor(model => model.BuildWidth)
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.BuildHeight, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BuildHeight)
                @Html.ValidationMessageFor(model => model.BuildHeight)
            </div>
        </div>
    
        <div class="form-group">
            @Html.LabelFor(model => model.OffersBreakawaySupport, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OffersBreakawaySupport)
                @Html.ValidationMessageFor(model => model.OffersBreakawaySupport)
            </div>
        </div>
    
        <div class="form-group">
            @Html.LabelFor(model => model.OffersNonBreakAwaySupport, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OffersNonBreakAwaySupport)
                @Html.ValidationMessageFor(model => model.OffersNonBreakAwaySupport)
            </div>
        </div>
    
        <div class="form-group">
            @Html.LabelFor(model => model.BuildSupportUsesMaterialSlot, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BuildSupportUsesMaterialSlot)
                @Html.ValidationMessageFor(model => model.BuildSupportUsesMaterialSlot)
            </div>
        </div>
    
        <div class="form-group">
            @Html.LabelFor(model => model.OffersFullColorPrinting, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OffersFullColorPrinting)
                @Html.ValidationMessageFor(model => model.OffersFullColorPrinting)
            </div>
        </div>
    
        <div class="form-group">
            @Html.LabelFor(model => model.FunctionalModelSupport, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FunctionalModelSupport)
                @Html.ValidationMessageFor(model => model.FunctionalModelSupport)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QueueVisible, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QueueVisible)
                @Html.ValidationMessageFor(model => model.QueueVisible)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubmissionEnabled, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SubmissionEnabled)
                @Html.ValidationMessageFor(model => model.SubmissionEnabled)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InternalCostPerUnit, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InternalCostPerUnit)
                @Html.ValidationMessageFor(model => model.InternalCostPerUnit)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExternalCostPerUnit, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExternalCostPerUnit)
                @Html.ValidationMessageFor(model => model.ExternalCostPerUnit)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InternalInitialCost, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InternalInitialCost)
                @Html.ValidationMessageFor(model => model.InternalInitialCost)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExternalInitialCost, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExternalInitialCost)
                @Html.ValidationMessageFor(model => model.ExternalInitialCost)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EnhancedGcodeViewerEnabled, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EnhancedGcodeViewerEnabled)
                @Html.ValidationMessageFor(model => model.EnhancedGcodeViewerEnabled)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GCodePlasticDiameter, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GCodePlasticDiameter)
                @Html.ValidationMessageFor(model => model.GCodePlasticDiameter)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PlasticType, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.PlasticType)
                @Html.ValidationMessageFor(model => model.PlasticType)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NozzleSize, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NozzleSize)
                @Html.ValidationMessageFor(model => model.NozzleSize)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
