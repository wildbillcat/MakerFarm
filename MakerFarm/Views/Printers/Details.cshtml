@model MakerFarm.Models.Printer
@{
    List<MakerFarm.Models.PrinterStatusLog> PrinterHistory = (List<MakerFarm.Models.PrinterStatusLog>)ViewData["PrinterHistory"];
    MakerFarm.Models.Print Print = (MakerFarm.Models.Print)ViewBag.AssignedPrint;
}
<h2>Details</h2>

<div>
    <h4>Printer</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.LabelFor(model => model.PrinterName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PrinterName)
        </dd>

        <dt>
            @Html.LabelFor(model => model.InternalName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.InternalName)
        </dd>

        <dt>
            @Html.LabelFor(model => model.PrinterTypeId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PrinterType.TypeName)
        </dd>

        <dt>
            @Html.Label("", "Printer Status", new { })
        </dt>

        <dd>
            @ViewData["Status"] 
            @if (!Model.PrinterName.Equals("Null Printer") && Print == null)
            {
               <text> | </text> 
            @Html.ActionLink("Update", "Create", "PrinterStatusLogs", new { id = Model.PrinterId }, null)
            }
        </dd>

    </dl>

</div>


        @if (Model.MaterialsInUse.Count() < Model.PrinterType.SupportedNumberMaterials && !Model.PrinterName.Equals("Null Printer"))
        {
            <h3><font color="red">Warning! Machine Needs Material:</font></h3>
            //Add Material Dropdown and Button
            using (Html.BeginForm("Create","MaterialCheckouts")) 
            {
            @Html.AntiForgeryToken()
            <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        @Html.Hidden("PrinterId", Model.PrinterId)
                        @Html.DropDownList("MaterialId", (SelectList)ViewData["Materials"])
                        <input type="submit" value="Add Material" class="btn btn-default" />
                    </div>
                </div>
            }

        }
        
        @if (Model.MaterialsInUse.Count() > 0 && !Model.PrinterName.Equals("Null Printer"))
        {
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayName("Material Type")
                </th>
                <th></th>
            </tr>

            @foreach (MakerFarm.Models.MaterialCheckout M in Model.MaterialsInUse)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => M.Material.MaterialName)
                    </td>
                    <td>
                        @if (Print == null)
                        {
                            using (Html.BeginForm("Delete","MaterialCheckouts"))
                        {
                        @Html.AntiForgeryToken()
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    @Html.Hidden("MaterialCheckoutId", M.MaterialCheckoutId.ToString())
                                    <input type="submit" value="Remove Material" class="btn btn-default" />
                                </div>
                            </div>
                            }
                        }
                        
                    </td>
                </tr>
            }

        </table>
        }
      
@if (Print != null)
{
    <h4>Assigned Print:</h4>

    <table class="table">
        <tr>

            <th>
                File Name
            </th>
            <th>
                User
            </th>
            <th>
                Submission Time
            </th>
            <th>
                Estimated Print Time
            </th>
            <th></th>
        </tr>
        <tr>
            <td>
                @Html.ActionLink(Print.FileName, "Details", new { id = Print.PrintId })
            </td>
            <td>
                @Print.UserName
            </td>
            <td>
                @Print.SubmissionTime
            </td>
            <td>
                @Print.EstToolpathTime
            </td>
            <td>
                <input type="button" value="Download" onclick="location.href='@Url.Action("Download", "Prints", new { id = Print.PrintId})'" />
            </td>
        </tr>
    </table>
}
<p>@Html.ActionLink("Back to Queue", "Index", "Prints", new { id = Model.PrinterTypeId }, null)</p>

@if (User.Identity.IsAuthenticated && Roles.IsUserInRole("Administrator"))
{
<h5>Administrative Actions:</h5>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.PrinterId }) |
    @Html.ActionLink("Delete", "Delete", new { id = Model.PrinterId }) 
</p>   
}

<h2>Index</h2>

<table class="table">
    <tr>
        <th>
            Log Entry Date
        </th>
        <th>
            Printer Status
        </th>
        <th>
            Comment
        </th>
    </tr>

    @foreach (var item in PrinterHistory)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.LogEntryDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LoggedPrinterStatus)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Comment)
            </td>
        </tr>
    }

</table>