@model MakerFarm.Models.Print

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Print</legend>

        @Html.HiddenFor(model => model.PrintId)

        <div class="editor-label">
            @Html.LabelFor(model => model.FileName)
        </div>
        <div class="editor-field">
            @Model.FileName
        </div>

        @foreach(SelectList S in (List<SelectList>)ViewData["MaterialsList"])
        {
            <div class="editor-label">
                @Html.Label("Material")
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.MaterialIds, S)
                @Html.ValidationMessageFor(model => model.MaterialIds)
            </div>
        }

        <div class="editor-label">
            @Html.LabelFor(model => model.UserName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UserName)
            @Html.ValidationMessageFor(model => model.UserName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.EstMaterialUse)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.EstMaterialUse)
            @Html.ValidationMessageFor(model => model.EstMaterialUse)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SubmissionTime)
        </div>
        <div class="editor-field">
            @Model.SubmissionTime
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.TermsAndConditionsAgreement)
        </div>
        <div class="editor-field">
            @Model.TermsAndConditionsAgreement
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.EstToolpathTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.EstToolpathTime)
            @Html.ValidationMessageFor(model => model.EstToolpathTime)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.AuthorizedAttempts)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.AuthorizedAttempts, (SelectList)ViewData["MaxNumberUserAttempts"])
            @Html.ValidationMessageFor(model => model.AuthorizedAttempts)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PrinterTypeId)
        </div>
        <div class="editor-field">
            @Model.PrinterType.TypeName
            @Html.ValidationMessageFor(model => model.PrinterTypeId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.StaffAssistedPrint)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.StaffAssistedPrint)
            @Html.ValidationMessageFor(model => model.StaffAssistedPrint)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ProcessingCharge)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ProcessingCharge)
            @Html.ValidationMessageFor(model => model.ProcessingCharge)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Comment)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Comment)
            @Html.ValidationMessageFor(model => model.Comment)
        </div>
        @if ((bool)ViewData["FullColorPrintCapable"]) { 
        <div class="editor-label">
            @Html.LabelFor(model => model.FullColorPrint)
        </div>
        <div class="editor-field">
            @Html.CheckBoxFor(model => model.FullColorPrint)
            @Html.ValidationMessageFor(model => model.FullColorPrint)
        </div>
        }
        else
        {
           @Html.Hidden("FullColorPrint", false) 
        }

        <div class="editor-label">
            @Html.LabelFor(model => model.FlaggedPrint)
        </div>
        <div class="editor-field">
            @Html.CheckBoxFor(model => model.FlaggedPrint)
            @Html.ValidationMessageFor(model => model.FlaggedPrint)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FlaggedComment)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.FlaggedComment)
            @Html.ValidationMessageFor(model => model.FlaggedComment)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.InternalUser)
        </div>
        <div class="editor-field">
            @Html.CheckBoxFor(model => model.InternalUser)
            @Html.ValidationMessageFor(model => model.InternalUser)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.BilledUser)
        </div>
        <div class="editor-field">
            @Html.CheckBoxFor(model => model.BilledUser)
            @Html.ValidationMessageFor(model => model.BilledUser)
        </div>


        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { id = Model.PrinterType.PrinterTypeId })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
