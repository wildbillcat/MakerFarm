@model MakerFarm.Models.Print

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<fieldset>
    <legend>Print</legend>

    <div class="display-label">
         @Html.LabelFor(model => model.FileName)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.FileName)
    </div>

    @foreach (string S in (List<string>)ViewData["MaterialsList"])
    {
        <div class="editor-label">
            @Html.Label("Material:")
        </div>
        <div class="editor-field">
            @S
        </div>
    }

    <div class="display-label">
         @Html.LabelFor(model => model.UserName)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.UserName)
    </div>

    <div class="display-label">
         @Html.LabelFor(model => model.SubmissionTime)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.SubmissionTime)
    </div>

    <div class="display-label">
         @Html.LabelFor(model => model.EstToolpathTime)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.EstToolpathTime)
    </div>

    <div class="display-label">
         @Html.LabelFor(model => model.AuthorizedAttempts)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.AuthorizedAttempts)
    </div>

    <div class="display-label">
         @Html.LabelFor(model => model.PrinterTypeId)
    </div>
    <div class="display-field">
        @Model.PrinterType.TypeName
    </div>

    <div class="display-label">
         @Html.LabelFor(model => model.StaffAssistedPrint)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.StaffAssistedPrint)
    </div>

    @if (Model.Comment != null && !Model.Comment.Equals(""))
    {
    <div class="display-label">
        @Html.LabelFor(model => model.Comment)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Comment)
    </div>
    }
    
    @if (User.Identity.IsAuthenticated && (Roles.IsUserInRole("Moderator") || Roles.IsUserInRole("Administrator"))) 
    { 
            
    <div class="display-label">
         @Html.LabelFor(model => model.FlaggedPrint)
    </div>
    <div class="display-field">
         @Html.DisplayFor(model => model.FlaggedPrint)
    </div>
        
        if (Model.FlaggedComment != null && !Model.FlaggedComment.Equals(""))
        {
        <div class="display-label">
            @Html.LabelFor(model => model.FlaggedComment)
        </div>
        <div class="display-field">
             @Html.DisplayFor(model => model.FlaggedComment)
        </div>
        }
        
        if ((bool)ViewData["DownloadAvailable"])
        {
        <div class="display-label">
            @Html.LabelFor(model => model.FileName, "File Download")
        </div>
        <div class="display-field">
            @Html.ActionLink(string.Concat("Download: ", Model.FileName), "Download", new { id = Model.PrintId })
        </div>   
        }
    }
</fieldset>
<p>
@if (User.Identity.IsAuthenticated && (Roles.IsUserInRole("Moderator") || Roles.IsUserInRole("Administrator")))
    { 
    @Html.ActionLink("Edit", "Edit", new { id=Model.PrintId })
    <text> | </text>
    }
    @Html.ActionLink("Back to List", "Index", new { id = Model.PrinterTypeId })
</p>
@if (User.Identity.IsAuthenticated && Roles.IsUserInRole("Administrator"))
{
    <h5>Administrative Actions:</h5>
    <p>
    @Html.ActionLink("Delete", "Delete", new { id = Model.PrintId })
    </p>
}
<h3>Print Log:</h3>
<table class="table">
    <tr>
        <th>
            Event TimeStamp
        </th>
        <th>
            Event Type
        </th>
        <th>
            Printer
        </th>
        <th>
            User
        </th>
        <th>
            Material Used
        </th>
        @if (User.Identity.IsAuthenticated && (Roles.IsUserInRole("Moderator") || Roles.IsUserInRole("Administrator")))
        {
        <th>
            Comment
        </th> 
        }
    </tr>

    @foreach (MakerFarm.Models.PrintEvent p in Model.PrintEvents.OrderByDescending(x => x.EventTimeStamp))
    {
        <tr>
            <td>
                @p.EventTimeStamp
            </td>
            <td>
                @p.EventType
            </td>
            <td>
                @p.Printer.PrinterName
            </td>
            <td>
                @p.UserName
            </td>
            <td>
                @p.MaterialUsed
            </td>
           @if (User.Identity.IsAuthenticated && (Roles.IsUserInRole("Moderator") || Roles.IsUserInRole("Administrator")))
           {
            <td>
               @p.Comment 
            </td>
           }
        </tr>
    }
</table>