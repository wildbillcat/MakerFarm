@model MakerFarm.Models.Print

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Print</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.UserID)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UserID, (string)ViewData["CurrentUser"], new { @disabled = "disabled" })
        </div>

        <div class="editor-label">
            @Html.Label("Print File:")
        </div>
        <div class="editor-field">
            @Html.TextBox("PrintFile", null, new { @id="PrintFile", @name="PrintFile", @type="file", @required="required" })
            @Html.ValidationMessage("PrintFile")
        </div>

        @for (int i = 0; i < (int)ViewData["SupportedMaterials"]; i++)
        { 
        <div class="editor-label">
            @Html.LabelFor(model => model.MaterialIDs[i])
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.MaterialIDs[i], (SelectList)ViewData["MaterialsList"])
            @Html.ValidationMessageFor(model => model.MaterialIDs[i])
        </div>
        }

        <div class="editor-label">
            @Html.LabelFor(model => model.EstPrintCost)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.EstPrintCost)
            @Html.ValidationMessageFor(model => model.EstPrintCost)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FinalPrintCost)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FinalPrintCost)
            @Html.ValidationMessageFor(model => model.FinalPrintCost)
        </div>

       

        <div class="editor-label">
            @Html.LabelFor(model => model.SubmissionTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SubmissionTime)
            @Html.ValidationMessageFor(model => model.SubmissionTime)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.EstToolpathTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.EstToolpathTime)
            @Html.ValidationMessageFor(model => model.EstToolpathTime)
        </div>
                
        <div class="editor-label">
            @Html.LabelFor(model => model.AuthorizedAttempts)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.AuthorizedAttempts, (SelectList)ViewData["MaxNumberUserAttempts"])
            @Html.ValidationMessageFor(model => model.AuthorizedAttempts)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PrinterTypeID)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PrinterTypeID)
            @Html.ValidationMessageFor(model => model.PrinterTypeID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.StaffAssitedPrint)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.StaffAssitedPrint)
            @Html.ValidationMessageFor(model => model.StaffAssitedPrint)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@(ViewData["SupportedFileTypes"])
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    
<script>
    
    $('input[type=file]').change(function (e) {
        var file = $(this).val();
        var ext = file.split('.').pop();
        var list = (@ViewBag["SupportedFileTypes"]);
        var pext = list.split(',');
        for (var i = 0; i < length; i++)
        {
            if(ext==pext[i])
            {
                return;
            }
        }
        alert("Invaild File Type: " + ext);
    });

</script>

        }